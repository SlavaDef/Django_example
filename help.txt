1. Для Windows PowerShell правильний спосіб активації віртуального середовища:

.\.venv\Scripts\Activate.ps1

2. Коли ви бачите префікс `(.venv)` перед командним рядком (що означає, що віртуальне середовище активовано), виконайте:

  pip install django

3. django-admin startproject first_project - створення проєкту

4. Перейдіть у директорію проєкту:

cd first_project

5. Запустіть сервер розробки, щоб перевірити, що все працює:

python manage.py runserver

6. створення програм - python manage.py startapp main ( main назва папки) створюється в директорії ( cd first_project )

7. далі програму треба зарееструвати у settings -> INSTALLED_APPS = [ 'main', .....

8. далі в urls.py прописуємо юрл які хочемо відслідковувати (home....) ->

from django.urls import path, include ->
urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('main.urls')), тут юрл мейн сторінка + всі похідні юрл в папці main(first_project/main)
]

9. Створюємо в main -> urls.py ->

from django.urls import path
from . import views


urlpatterns = [

    path('', views.index), # якщо головна сторінка то виклик конкрет функції якоїсь
]

10. https://fontawesome.com/icons сайт іконок

11. щоб іконки працювали треба завантажити
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css">

12. terminal -> python manage.py startapp news -> створення ще одного підпроєкту для роботи з бд

13. далі в models.py описуємо поля таблиці і командою  python manage.py makemigrations створюємо ніби міграцію
  в папці migrations створеться файл з описом таблиці 0001_initial.py ( створення файлу міграції )
  далі командою python manage.py migrate виконуємо міграцію

14. далі створюємо адміністратора через термінал python manage.py createsuperuser

15. щоб бачити всі таблиці у файлі admin.py потрібно зараєструвати ту таблицю у  admin.site.register(Articles)

from first_project.news.models import Articles

admin.site.register(Articles)

16.     class Meta:
        verbose_name = 'Новина'
        verbose_name_plural = 'Новини'

 прописуємо щоб змінити назву таблиці  у models.py (news)

 17.  Ось способи “жорстко” перезавантажити сторінку після змін у CSS та гарантувати, що підтягнеться свіжа версія.
   Швидкі дії в браузері (Windows):
-  Chrome/Edge: Ctrl+F5 або Ctrl+Shift+R

18. створюємо файл forms.py y news для роботи форми з моделью

from .models import Articles
from django.forms import ModelForm

class ArticleForm(ModelForm):
    class Meta:
        model = Articles
        fields = ['title', 'anons', 'content', 'date']

19. створюємо можливість працювати з формочкою у views.py дописуємо
from .forms import ArticleForm
def create(request):
    form = ArticleForm()
    data = {'form':form }
    return render(request, 'news/create.html', data)


20. форма вводу але через джанго:

widgets = {
             'title': TextInput(attrs={'class':'form-control', 'placeholder':'Назва статті'}),
             'anons': TextInput(attrs={'class': 'form-control', 'placeholder': 'Анонс'}),
             'content': Textarea(attrs={'class': 'form-control', 'placeholder': 'текст статті'}),
             'date': DateTimeInput(attrs={'class': 'form-control', 'type': 'datetime-local'}),

        }

21. далі доопрацювання метода у views.py

22. <img src="{% static 'main/img/BBC.png'%}" alt=""><img src="{% static 'main/img/BBC.png'%}" alt="">

https://www.youtube.com/watch?v=6K83dgjkQNw&t=15s

